// Mocks generated by Mockito 5.4.4 from annotations
// in azkari/test/features/tasbih/providers/tasbih_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:azkari/data/models/azkar_model.dart' as _i5;
import 'package:azkari/data/models/daily_goal_model.dart' as _i6;
import 'package:azkari/data/models/tasbih_model.dart' as _i2;
import 'package:azkari/data/repositories/azkar_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTasbihModel_0 extends _i1.SmartFake implements _i2.TasbihModel {
  _FakeTasbihModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AzkarRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAzkarRepository extends _i1.Mock implements _i3.AzkarRepository {
  MockAzkarRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<String>> getCategories() => (super.noSuchMethod(
        Invocation.method(
          #getCategories,
          [],
        ),
        returnValue: _i4.Future<List<String>>.value(<String>[]),
      ) as _i4.Future<List<String>>);

  @override
  _i4.Future<List<_i5.AzkarModel>> getAzkarByCategory(String? category) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAzkarByCategory,
          [category],
        ),
        returnValue: _i4.Future<List<_i5.AzkarModel>>.value(<_i5.AzkarModel>[]),
      ) as _i4.Future<List<_i5.AzkarModel>>);

  @override
  _i4.Future<List<_i5.AzkarModel>> getAzkarByIds(List<int>? ids) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAzkarByIds,
          [ids],
        ),
        returnValue: _i4.Future<List<_i5.AzkarModel>>.value(<_i5.AzkarModel>[]),
      ) as _i4.Future<List<_i5.AzkarModel>>);

  @override
  _i4.Future<List<_i2.TasbihModel>> getCustomTasbihList() =>
      (super.noSuchMethod(
        Invocation.method(
          #getCustomTasbihList,
          [],
        ),
        returnValue:
            _i4.Future<List<_i2.TasbihModel>>.value(<_i2.TasbihModel>[]),
      ) as _i4.Future<List<_i2.TasbihModel>>);

  @override
  _i4.Future<_i2.TasbihModel> addTasbih(String? text) => (super.noSuchMethod(
        Invocation.method(
          #addTasbih,
          [text],
        ),
        returnValue: _i4.Future<_i2.TasbihModel>.value(_FakeTasbihModel_0(
          this,
          Invocation.method(
            #addTasbih,
            [text],
          ),
        )),
      ) as _i4.Future<_i2.TasbihModel>);

  @override
  _i4.Future<void> deleteTasbih(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTasbih,
          [id],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateTasbihText(
    int? id,
    String? newText,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTasbihText,
          [
            id,
            newText,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateSortOrders(Map<int, int>? newOrders) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSortOrders,
          [newOrders],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> setGoal(
    int? tasbihId,
    int? targetCount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGoal,
          [
            tasbihId,
            targetCount,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<List<_i6.DailyGoalModel>> getGoalsWithProgressForDate(
          String? date) =>
      (super.noSuchMethod(
        Invocation.method(
          #getGoalsWithProgressForDate,
          [date],
        ),
        returnValue:
            _i4.Future<List<_i6.DailyGoalModel>>.value(<_i6.DailyGoalModel>[]),
      ) as _i4.Future<List<_i6.DailyGoalModel>>);

  @override
  _i4.Future<List<_i6.DailyGoalModel>> getTodayGoalsWithProgress() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTodayGoalsWithProgress,
          [],
        ),
        returnValue:
            _i4.Future<List<_i6.DailyGoalModel>>.value(<_i6.DailyGoalModel>[]),
      ) as _i4.Future<List<_i6.DailyGoalModel>>);

  @override
  _i4.Future<void> incrementTasbihDailyCount(int? tasbihId) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementTasbihDailyCount,
          [tasbihId],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<Map<int, int>> getTodayTasbihCounts() => (super.noSuchMethod(
        Invocation.method(
          #getTodayTasbihCounts,
          [],
        ),
        returnValue: _i4.Future<Map<int, int>>.value(<int, int>{}),
      ) as _i4.Future<Map<int, int>>);

  @override
  _i4.Future<Map<String, List<Map<String, dynamic>>>> getProgressForDateRange(
    String? startDate,
    String? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProgressForDateRange,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i4.Future<Map<String, List<Map<String, dynamic>>>>.value(
            <String, List<Map<String, dynamic>>>{}),
      ) as _i4.Future<Map<String, List<Map<String, dynamic>>>>);

  @override
  _i4.Future<Map<String, double>> getMonthlyProgressSummary(
    String? startDate,
    String? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMonthlyProgressSummary,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i4.Future<Map<String, double>>.value(<String, double>{}),
      ) as _i4.Future<Map<String, double>>);
}
